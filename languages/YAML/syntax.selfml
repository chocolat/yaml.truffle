(root source.yaml
    (include @erb)
    (zone string.unquoted.block.yaml
        (start
            (regex [^(\s*)(?:(-)|(?:(-\s*)?(\w+\s*(:))))\s*(\||>)]
                (3 punctuation.definition.entry.yaml)
                (4 entity.name.tag.yaml)
                (5 punctuation.separator.key-value.yaml)
                (2 punctuation.definition.entry.yaml)))
        (end
            (regex [^(?!^\1)|^(?=\1(-|\w+\s*:)|#)]))
        (subzones
            (include @erb)))
    (zone constant.numeric.yaml
        (match
            (regex [(?:(?:(-\s*)?(\w+\s*(:)))|(-))\s*((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\s*$]
                (3 punctuation.separator.key-value.yaml)
                (4 punctuation.definition.entry.yaml)
                (1 punctuation.definition.entry.yaml)
                (2 entity.name.tag.yaml))))
    (zone string.unquoted.yaml
        (match
            (regex [(?:(?:(-\s*)?(\w+\s*(:)))|(-))\s*(?:((")[^"]*("))|((')[^']*('))|([^,{}&#\[\]]+))\s*]
                (7 punctuation.definition.string.end.yaml)
                (3 punctuation.separator.key-value.yaml)
                (11 string.unquoted.yaml)
                (4 punctuation.definition.entry.yaml)
                (8 string.quoted.single.yaml)
                (9 punctuation.definition.string.begin.yaml)
                (5 string.quoted.double.yaml)
                (1 punctuation.definition.entry.yaml)
                (6 punctuation.definition.string.begin.yaml)
                (10 punctuation.definition.string.end.yaml)
                (2 entity.name.tag.yaml))))
    (zone constant.other.date.yaml
        (match
            (regex [(?:(?:(-\s*)?(\w+\s*(:)))|(-))\s*([0-9]{4}-[0-9]{2}-[0-9]{2})\s*$]
                (3 punctuation.separator.key-value.yaml)
                (4 punctuation.definition.entry.yaml)
                (1 punctuation.definition.entry.yaml)
                (2 entity.name.tag.yaml))))
    (zone meta.tag.yaml
        (match
            (regex [(\w.*?)(:)\s*((\!\!)omap)?]
                (3 keyword.other.omap.yaml)
                (4 punctuation.definition.keyword.yaml)
                (1 entity.name.tag.yaml)
                (2 punctuation.separator.key-value.yaml))))
    (zone variable.other.yaml
        (match
            (regex [(\&|\*)\w.*?$]
                (1 punctuation.definition.variable.yaml))))
    (zone string.quoted.double.yaml
        (start
            (regex "
                (0 punctuation.definition.string.begin.yaml)))
        (end
            (regex "
                (0 punctuation.definition.string.end.yaml)))
        (subzones
            (include @escaped_char)
            (include @erb)))
    (zone string.quoted.single.yaml
        (start
            (regex '
                (0 punctuation.definition.string.begin.yaml)))
        (end
            (regex '
                (0 punctuation.definition.string.end.yaml)))
        (subzones
            (include @escaped_char)
            (include @erb)))
    (zone string.interpolated.yaml
        (start
            (regex [`]
                (0 punctuation.definition.string.begin.yaml)))
        (end
            (regex [`]
                (0 punctuation.definition.string.end.yaml)))
        (subzones
            (include @escaped_char)
            (include @erb)))
    (zone keyword.operator.merge-key.yaml
        (match
            (regex [(\<\<): ((\*).*)$]
                (3 punctuation.definition.keyword.yaml)
                (1 entity.name.tag.yaml)
                (2 keyword.operator.merge-key.yaml))))
    (zone invalid.deprecated.trailing-whitespace.yaml
        (match
            (regex [( |	)+$])))
    (zone comment.line.number-sign.yaml
        (match
            (regex [(?<!\$)(#)(?!\{).*$\n?]
                (1 punctuation.definition.comment.yaml))))
    (zone keyword.operator.symbol
        (match -))
    (zone meta.leading-tabs.yaml
        (start
            (regex [^(?=\t)]))
        (end
            (regex [(?=[^\t])]))
        (subzones
            (zone
                (match
                    (regex [(\t)(\t)?]
                        (1 meta.odd-tab)
                        (2 meta.even-tab)))))))

(collection erb
    (zone source.ruby.rails.embedded.html
        (start
            (regex [<%+(?!>)=?]
                (0 punctuation.section.embedded.ruby)))
        (end
            (regex %>
                (0 punctuation.section.embedded.ruby)))
        (subzones
            (zone comment.line.number-sign.ruby
                (match
                    (regex [(#).*?(?=%>)]
                        (1 punctuation.definition.comment.ruby))))
            (include source.ruby.rails))))

(collection escaped_char
    (zone constant.character.escape.yaml
        (match
            (regex \\.))))